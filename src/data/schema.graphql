scalar Date

type Session {
  id: ID!
  isLoggedIn: Boolean
  error: String
}

type Event {
  id: ID!
  date: Date!
  name: String!
  budget: Int!
}

enum EventFilterType {
  RECENT
  ALL
  ARCHIVED
}

type Query {
  session: Session!
  events(filterType: EventFilterType!, search: String): [Event!]!
  event(id: ID): Event!
}

type Mutation {
  signup(email: String!, password: String!): Session!
  login(email: String!, password: String!): Session!
  logout: Session!
}